run
UserGlobals associations do: [:assoc |
  assoc value isBehavior
    ifTrue: [
      | globalName |
      globalName := assoc key asString.
      (globalName ~= 'BaselineOf' and: [
           (globalName _findString: 'BaselineOf' startingAt: 1 ignoreCase: false) == 1 ])
         ifTrue: [
           GsFile gciLogServer: '  removing the baseline ', globalName printString.
           assoc value removeFromSystem ] ] ].
true
%

run
"Explicitly load latest Grease configuration, since we're loading the #bleeding edge"
Metacello new
   configuration: 'Grease';
   repository: 'http://www.smalltalkhub.com/mc/Seaside/MetacelloConfigurations/main';
   get.
GsDeployer
  deploy: [
  {
    {'Metacello'. 'filetree:///opt/git/metacello-work/repository'. 'default'. #() }.
    {'GLASS1'. 'filetree:///opt/git/glass/repository'. 'default'. #() }.
    {'Seaside3'. 'github://glassdb/Seaside31:gemstone3.1/repository'. 'CI'. #() }.
  } do: [:ar |
    | project repository loads performInitialization |
    project := ar at: 1.
    repository := ar at: 2.
    loads := ar at: 3.
    performInitialization := ar at: 4.
    [
    Metacello new
      baseline: project;
      repository: repository;
      get.
    [
    Metacello new
      baseline: project;
      repository: repository;
      onConflict: [ :ex | ex allow ];
      load: loads 
         ] on: MCPerformPostloadNotification do: [:ex |
           (performInitialization includes: ex postloadClass theNonMetaClass name)
             ifTrue: [ 
               "perform initialization"
               ex resume: true ]
             ifFalse: [
               GsFile gciLogServer: '  Skip ', ex postloadClass name asString, ' initialization.'.
                ex resume: false ] ] 
     ]  on: Warning do: [:ex |
           Transcript
              cr;
              show: ex description.
            ex resume ].
  ] ].
true
%

